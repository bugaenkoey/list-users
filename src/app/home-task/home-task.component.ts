import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-home-task',
  templateUrl: './home-task.component.html',
  styleUrls: ['./home-task.component.scss']
})
export class HomeTaskComponent implements OnInit {
name :string ="Count ";
ht = "Введение в Angular \r\n"+
"Для работы с Angular необходимо:    \n"+                                                          
"• node.js (LTS) \n"+
"• интерфейс командной строки Angular \n"+
"Или же вы можете выполнить задание онлайн, используя stackblitz.com \n"+
"Задание \n"+
"Написать приложение, которое загрузит и отобразит список пользователей (источник данных). \n"+
"Пример, сделанный на паре \n"+
"Сам список должен быть отдельным компонентом, а загрузка должна производиться из сервиса. \n"+
"Рекомендуемые этапы: \n"+
"1. Создать приложение с помощью команды ng new _название проекта_ и открыть его в \n"+
"VS Code \n"+
"2. Создать компонент списка пользователей \n"+
"3. Создать в отдельном файле интерфейс описания типа пользователя (пример) (для \n"+
"упрощения, используйте только поля id, name, username, email) \n"+
"4. Создать в компоненте переменную под массив пользователей и вручную добавить туда 2-3 \n"+
"пользователя \n"+
"5. Сделать вывод списка пользователей в компоненте, добавив код в HTML и CSS файлы \n"+
"6. Создать сервис для получения списка пользователей и перенести туда ранее созданный \n"+
"массив \n"+
"7. Подключить сервис в компоненте (добавив его параметром конструктора) \n"+
"8. При загрузке компонента получать данные из сервиса и сохранять в переменную для \n"+
"отображения \n"+
"9. По инструкции или по примеру с пары подключить \n"+
"в app.module.ts HttpClientModule \n"+
"10. Подключить HttpClient в сервисе (добавив его параметром конструктора) \n"+
"11. Добавить метод с get-запросом, который будет идти по ссылке и получать пользователей \n"+
"12. В компоненте вызвать этот метод и подписаться на результат выполнения запроса \n"+
"13. При получении ответа задать результат запроса в переменную для отображения \n"+
"14. Проверить что приложение работает корректно \n"+
"15. Задание выполнено, вы великолепны \n"+
"Дополнительная информация \n"+
"16. для создания компонентов используйте ng generate component components/имякомпонента --skip-tests \n"+
"17. для создания сервисов используйте ng generate service services/имя-сервиса - \n"+
"-skip-tests \n"+
"18.";
homeWorkTask = "Введение в Angular Для работы с Angular необходимо: node.js (LTS) интерфейс командной строки Angular Или же вы можете выполнить задание онлайн, используя stackblitz.com Задание Написать приложение, которое загрузит и отобразит список пользователей (источник данных). Пример, сделанный на паре Сам список должен быть отдельным компонентом, а загрузка должна производиться из сервиса. Рекомендуемые этапы: Создать приложение с помощью команды ng new _название проекта_ и открыть его в VS Code Создать компонент списка пользователей Создать в отдельном файле интерфейс описания типа пользователя (пример) (для упрощения, используйте только поля id, name, username, email) Создать в компоненте переменную под массив пользователей и вручную добавить туда 2-3 пользователя Сделать вывод списка пользователей в компоненте, добавив код в HTML и CSS файлы Создать сервис для получения списка пользователей и перенести туда ранее созданный массив Подключить сервис в компоненте (добавив его параметром конструктора) При загрузке компонента получать данные из сервиса и сохранять в переменную для отображения По инструкции или по примеру с пары подключить в app.module.ts HttpClientModule Подключить HttpClient в сервисе (добавив его параметром конструктора) Добавить метод с get-запросом, который будет идти по ссылке и получать пользователей В компоненте вызвать этот метод и подписаться на результат выполнения запроса При получении ответа задать результат запроса в переменную для отображения Проверить что приложение работает корректно Задание выполнено, вы великолепны Дополнительная информация  для создания компонентов используйте ng generate component components/имя-компонента --skip-tests  для создания сервисов используйте ng generate service services/имя-сервиса --skip-tests ";
  constructor() {

   }

  ngOnInit(): void {
  }

}
